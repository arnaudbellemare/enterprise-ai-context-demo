{
  "timestamp": "2025-10-23T23:33:10.838Z",
  "summary": {
    "total": 33,
    "passed": 21,
    "failed": 5,
    "warned": 6,
    "skipped": 1
  },
  "results": [
    {
      "component": "Environment",
      "test": "NEXT_PUBLIC_SUPABASE_URL",
      "status": "FAIL",
      "message": "Database - Required variable missing",
      "recommendation": "Set NEXT_PUBLIC_SUPABASE_URL in .env.local file"
    },
    {
      "component": "Environment",
      "test": "NEXT_PUBLIC_SUPABASE_ANON_KEY",
      "status": "FAIL",
      "message": "Database - Required variable missing",
      "recommendation": "Set NEXT_PUBLIC_SUPABASE_ANON_KEY in .env.local file"
    },
    {
      "component": "Environment",
      "test": "SUPABASE_SERVICE_ROLE_KEY",
      "status": "FAIL",
      "message": "Database - Required variable missing",
      "recommendation": "Set SUPABASE_SERVICE_ROLE_KEY in .env.local file"
    },
    {
      "component": "Environment",
      "test": "PERPLEXITY_API_KEY",
      "status": "PASS",
      "message": "LLM - Variable set"
    },
    {
      "component": "Environment",
      "test": "OPENAI_API_KEY",
      "status": "WARN",
      "message": "LLM - Optional variable not set",
      "recommendation": "Some features may be unavailable without OPENAI_API_KEY"
    },
    {
      "component": "Environment",
      "test": "ANTHROPIC_API_KEY",
      "status": "WARN",
      "message": "LLM - Optional variable not set",
      "recommendation": "Some features may be unavailable without ANTHROPIC_API_KEY"
    },
    {
      "component": "Environment",
      "test": "OPENROUTER_API_KEY",
      "status": "PASS",
      "message": "LLM - Variable set"
    },
    {
      "component": "Environment",
      "test": "OLLAMA_HOST",
      "status": "WARN",
      "message": "LLM (Local) - Optional variable not set",
      "recommendation": "Some features may be unavailable without OLLAMA_HOST"
    },
    {
      "component": "Environment",
      "test": "REDIS_URL",
      "status": "WARN",
      "message": "Caching - Optional variable not set",
      "recommendation": "Some features may be unavailable without REDIS_URL"
    },
    {
      "component": "WALT Infrastructure",
      "test": "Logger",
      "status": "PASS",
      "message": "Module exists at ./frontend/lib/walt/logger.ts"
    },
    {
      "component": "WALT Infrastructure",
      "test": "Validation",
      "status": "PASS",
      "message": "Module exists at ./frontend/lib/walt/validation.ts"
    },
    {
      "component": "WALT Infrastructure",
      "test": "Cache Manager",
      "status": "PASS",
      "message": "Module exists at ./frontend/lib/walt/cache-manager.ts"
    },
    {
      "component": "WALT Infrastructure",
      "test": "Cost Calculator",
      "status": "PASS",
      "message": "Module exists at ./frontend/lib/walt/cost-calculator.ts"
    },
    {
      "component": "WALT Infrastructure",
      "test": "Error Types",
      "status": "PASS",
      "message": "Module exists at ./frontend/lib/walt/errors.ts"
    },
    {
      "component": "WALT Infrastructure",
      "test": "Logger Functional",
      "status": "PASS",
      "message": "Logger creates instances and logs"
    },
    {
      "component": "WALT Infrastructure",
      "test": "SSRF Protection",
      "status": "PASS",
      "message": "Validation blocks localhost URLs"
    },
    {
      "component": "WALT Infrastructure",
      "test": "Cost Calculator",
      "status": "FAIL",
      "message": "Invalid cost calculation: [object Object]"
    },
    {
      "component": "Rate Limiting",
      "test": "Core Module",
      "status": "PASS",
      "message": "api-rate-limiter.ts exists"
    },
    {
      "component": "Rate Limiting",
      "test": "Stats Method",
      "status": "PASS",
      "message": "Stats method works (3 providers configured)",
      "details": {
        "providers": [
          "OpenRouter",
          "Perplexity",
          "Ollama Local"
        ]
      }
    },
    {
      "component": "Rate Limiting",
      "test": "Optimized Version",
      "status": "PASS",
      "message": "api-rate-limiter-optimized.ts exists"
    },
    {
      "component": "Rate Limiting",
      "test": "LLM Wrapper",
      "status": "PASS",
      "message": "llm-helpers.ts wrapper exists"
    },
    {
      "component": "Rate Limiting",
      "test": "MoE Integration",
      "status": "PASS",
      "message": "MoE orchestrator uses rate-limited wrapper (no direct API calls)"
    },
    {
      "component": "GEPA Framework",
      "test": "Core GEPA",
      "status": "PASS",
      "message": "Module exists: ./frontend/lib/gepa-algorithms.ts"
    },
    {
      "component": "GEPA Framework",
      "test": "Universal Prompt Discovery",
      "status": "PASS",
      "message": "Module exists: ./frontend/lib/gepa-universal-prompt.ts"
    },
    {
      "component": "GEPA Framework",
      "test": "Agent Evaluation",
      "status": "PASS",
      "message": "Module exists: ./frontend/lib/gepa-agent-evaluation.ts"
    },
    {
      "component": "GEPA Framework",
      "test": "Ax LLM Integration",
      "status": "PASS",
      "message": "Module exists: ./frontend/lib/gepa-ax-integration.ts"
    },
    {
      "component": "GEPA Framework",
      "test": "Example Implementation",
      "status": "PASS",
      "message": "Module exists: ./examples/gepa-ax-example.ts"
    },
    {
      "component": "GEPA Framework",
      "test": "Ax Integration Functional",
      "status": "PASS",
      "message": "GEPA + Ax LLM integration module loads successfully"
    },
    {
      "component": "Code Quality",
      "test": "Console Usage (llm-helpers.ts)",
      "status": "PASS",
      "message": "No console.log statements found (using structured logger)"
    },
    {
      "component": "Code Quality",
      "test": "Console Usage (moe-orchestrator.ts)",
      "status": "WARN",
      "message": "83 console statements found",
      "recommendation": "Replace console.log with createLogger() for production-ready logging"
    },
    {
      "component": "Code Quality",
      "test": "Console Usage (teacher-student-system.ts)",
      "status": "WARN",
      "message": "28 console statements found",
      "recommendation": "Replace console.log with createLogger() for production-ready logging"
    },
    {
      "component": "Code Quality",
      "test": "TypeScript Compilation",
      "status": "FAIL",
      "message": "15 TypeScript errors found",
      "details": {
        "errorOutput": ""
      },
      "recommendation": "Run \"npx tsc --noEmit\" in frontend/ to see errors"
    },
    {
      "component": "Server Tests",
      "test": "Server Availability",
      "status": "SKIP",
      "message": "Server not running on localhost:3000",
      "recommendation": "Start server with \"npm run dev\" in frontend/ to test API endpoints"
    }
  ]
}